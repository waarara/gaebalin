<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
				  "dtd/mybatis-3-mapper.dtd">
<mapper namespace="sche">
	<resultMap id="scheResult" type="sche">
		<result property="scheNo" column="SCHE_NO" />
		<result property="userCode" column="USER_CODE" />
		<result property="scheTitle" column="SCHE_TITLE" />
		<result property="scheContents" column="SCHE_CONTENTS" />
		<result property="scheDate" column="SCHE_DATE" />
		<result property="scheHits" column="SCHE_HITS" />
	</resultMap>

	<select id="retrieveScheList" resultType="map">
		<![CDATA[
		/*	retrieveScheList	*/
			SELECT SCHE.SCHE_NO
				 , SCHE.USER_CODE
				 , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_ID
				 , SCHE.SCHE_TITLE
				 , SCHE.SCHE_CONTENTS
				 , SCHE.SCHE_DATE
				 , (SELECT COUNT(*) FROM TB_SCHE) AS SCHE_COUNT
				 , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_IMAGE
				 , SCHE.SCHE_HITS
	             , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                    THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                    ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS SCHE_TIMEAGO
			FROM   TB_SCHE SCHE
			WHERE  1=1
			ORDER BY SCHE.SCHE_DATE DESC
		]]>
	</select>

	<select id="retrieveScheListByTime" resultType="map">
		<![CDATA[
		/*	retrieveScheListByTime	*/
			SELECT T.*
	        FROM
	        (
		        SELECT SCHE.SCHE_NO
		           , SCHE.USER_CODE
		           , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_ID
		           , SCHE.SCHE_TITLE
		           , SCHE.SCHE_CONTENTS
		           , SCHE.SCHE_DATE
		           , (SELECT COUNT(*) FROM TB_SCHE) AS SCHE_COUNT
		           , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_IMAGE
		           , SCHE.SCHE_HITS
		           , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                     THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                     ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS SCHE_TIMEAGO
		        FROM   TB_SCHE SCHE
		        WHERE  1=1
		        ORDER BY SCHE.SCHE_DATE DESC
	       ) T
	       WHERE ROWNUM BETWEEN 1 AND 5
		]]>
	</select>

	<select id="retrieveScheListByHits" resultType="map">
		<![CDATA[
		/*	retrieveScheListByHits	*/
			SELECT T.*
	        FROM
	        (
		        SELECT SCHE.SCHE_NO
		           , SCHE.USER_CODE
		           , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_ID
		           , SCHE.SCHE_TITLE
		           , SCHE.SCHE_CONTENTS
		           , SCHE.SCHE_DATE
		           , (SELECT COUNT(*) FROM TB_SCHE) AS SCHE_COUNT
		           , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_IMAGE
		           , SCHE.SCHE_HITS
		           , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                     THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                     ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(SCHE_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS SCHE_TIMEAGO
		        FROM   TB_SCHE SCHE
		        WHERE  1=1
		        ORDER BY SCHE.SCHE_HITS DESC
	       ) T
	       WHERE ROWNUM BETWEEN 1 AND 5
		]]>
	</select>

	<select id="retrieveSche" parameterType="map" resultType="map">
		<![CDATA[
		/*	retrieveSche	*/
			SELECT SCHE.SCHE_NO
				 , SCHE.USER_CODE
				 , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_ID
				 , SCHE.SCHE_TITLE
				 , SCHE.SCHE_CONTENTS
				 , SCHE.SCHE_DATE
				 , SCHE.SCHE_HITS
				 , NVL((SELECT COUNT(*) FROM TB_REPLY WHERE SCHE_NO = #{scheNo}), 0) AS SCHE_REPLY
				 , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = SCHE.USER_CODE) AS USER_IMAGE
			FROM   TB_SCHE SCHE
			WHERE  1=1
			AND    SCHE_NO = #{scheNo}
		]]>
	</select>

	<select id="retrieveMaxScheNo" resultType="string">
		<![CDATA[
		/*	retrieveMaxScheNo	*/
			SELECT MAX(SCHE.SCHE_NO)
			FROM   TB_SCHE SCHE
		]]>
	</select>

	<insert id="createSche" parameterType="sche">
		<![CDATA[
		/*	createSche	*/
			INSERT INTO TB_SCHE(
			  SCHE_NO
			, USER_CODE
			, SCHE_TITLE
			, SCHE_CONTENTS
			, SCHE_DATE
			) VALUES (
			  'SC' || LPAD(SCHE_SEQ.NEXTVAL, 6, 0)
			, #{userCode}
			, #{scheTitle}
			, #{scheContents}
			, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')
			)
		]]>
	</insert>

	<update id="updateSche" parameterType="sche">
		<![CDATA[
		/*	updateSche	*/
			UPDATE TB_SCHE
			SET SCHE_TITLE          =  #{scheTitle}
			  , SCHE_CONTENTS       =  #{scheContents}
			WHERE SCHE_NO = #{scheNo}
		]]>
	</update>

	<update id="updateScheHits" parameterType="sche">
		<![CDATA[
		/*	updateScheHits	*/
			UPDATE TB_SCHE
			SET SCHE_HITS          =  SCHE_HITS + 1
			WHERE SCHE_NO = #{scheNo}
		]]>
	</update>

	<delete id="deleteSche" parameterType="map">
		<![CDATA[
		/*	deleteSche	*/
			DELETE
			FROM  TB_SCHE
			WHERE 1=1
			AND SCHE_NO = #{scheNo}
		]]>
	</delete>
</mapper>