<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
				  "dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<resultMap id="boardResult" type="board">
		<result property="boardNo" column="BOARD_NO" />
		<result property="userCode" column="USER_CODE" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContents" column="BOARD_CONTENTS" />
		<result property="boardDate" column="BOARD_DATE" />
		<result property="boardHits" column="BOARD_HITS" />
		<result property="boardRating" column="BOARD_RATING" />
	</resultMap>

	<select id="retrieveBoardList" resultType="map">
		<![CDATA[
		/*	retrieveBoardList	*/
			SELECT BOARD.BOARD_NO
				 , BOARD.USER_CODE
				 , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_ID
				 , BOARD.BOARD_TITLE
				 , BOARD.BOARD_CONTENTS
				 , BOARD.BOARD_DATE
				 , (SELECT COUNT(*) FROM TB_BOARD) AS BOARD_COUNT
				 , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_IMAGE
				 , BOARD.BOARD_RATING
				 , BOARD.BOARD_HITS
				 , NVL((SELECT COUNT(*) FROM TB_REPLY WHERE BOARD_NO = BOARD.BOARD_NO), 0) AS BOARD_REPLY
	             , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                    THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                    ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS BOARD_TIMEAGO
			FROM   TB_BOARD BOARD
			WHERE  1=1
			ORDER BY BOARD.BOARD_DATE DESC
		]]>
	</select>

	<select id="retrieveBoardListByTime" resultType="map">
		<![CDATA[
		/*	retrieveBoardListByTime	*/
			SELECT T.*
	        FROM
	        (
		        SELECT BOARD.BOARD_NO
		           , BOARD.USER_CODE
		           , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_ID
		           , BOARD.BOARD_TITLE
		           , BOARD.BOARD_CONTENTS
		           , BOARD.BOARD_DATE
		           , (SELECT COUNT(*) FROM TB_BOARD) AS BOARD_COUNT
		           , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_IMAGE
		           , BOARD.BOARD_RATING
		           , BOARD.BOARD_HITS
		           , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                     THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                     ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS BOARD_TIMEAGO
		        FROM   TB_BOARD BOARD
		        WHERE  1=1
		        ORDER BY BOARD.BOARD_DATE DESC
	       ) T
	       WHERE ROWNUM BETWEEN 1 AND 5
		]]>
	</select>

	<select id="retrieveBoardListByHits" resultType="map">
		<![CDATA[
		/*	retrieveBoardListByHits	*/
			SELECT T.*
	        FROM
	        (
		        SELECT BOARD.BOARD_NO
		           , BOARD.USER_CODE
		           , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_ID
		           , BOARD.BOARD_TITLE
		           , BOARD.BOARD_CONTENTS
		           , BOARD.BOARD_DATE
		           , (SELECT COUNT(*) FROM TB_BOARD) AS BOARD_COUNT
		           , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_IMAGE
		           , BOARD.BOARD_RATING
		           , BOARD.BOARD_HITS
		           , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                     THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                     ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS BOARD_TIMEAGO
		        FROM   TB_BOARD BOARD
		        WHERE  1=1
		        ORDER BY BOARD.BOARD_HITS DESC
	       ) T
	       WHERE ROWNUM BETWEEN 1 AND 5
		]]>
	</select>

	<select id="retrieveBoardListByRating" resultType="map">
		<![CDATA[
		/*	retrieveBoardListByRating	*/
			SELECT T.*
	        FROM
	        (
		        SELECT BOARD.BOARD_NO
		           , BOARD.USER_CODE
		           , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_ID
		           , BOARD.BOARD_TITLE
		           , BOARD.BOARD_CONTENTS
		           , BOARD.BOARD_DATE
		           , (SELECT COUNT(*) FROM TB_BOARD) AS BOARD_COUNT
		           , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_IMAGE
		           , BOARD.BOARD_RATING
		           , BOARD.BOARD_HITS
		      	   , (CASE WHEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) < 24
                     THEN TRUNC(((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI')) * 24)) || '시간 전'
                     ELSE TRUNC((TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') - TO_DATE(BOARD_DATE, 'YYYY-MM-DD HH24:MI'))) || '일 전' END) AS BOARD_TIMEAGO
		        FROM   TB_BOARD BOARD
		        WHERE  1=1
		        ORDER BY BOARD.BOARD_RATING DESC
	       ) T
	       WHERE ROWNUM BETWEEN 1 AND 5
		]]>
	</select>

	<select id="retrieveBoard" parameterType="map" resultType="map">
		<![CDATA[
		/*	retrieveBoard	*/
			SELECT BOARD.BOARD_NO
				 , BOARD.USER_CODE
				 , (SELECT ID FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_ID
				 , BOARD.BOARD_TITLE
				 , BOARD.BOARD_CONTENTS
				 , BOARD.BOARD_DATE
				 , BOARD.BOARD_HITS
				 , BOARD.BOARD_RATING
				 , NVL((SELECT COUNT(*) FROM TB_REPLY WHERE BOARD_NO = #{boardNo}), 0) AS BOARD_REPLY
				 , (SELECT USER_IMAGE FROM TB_COM_USER WHERE USER_CODE = BOARD.USER_CODE) AS USER_IMAGE
			FROM   TB_BOARD BOARD
			WHERE  1=1
			AND    BOARD_NO = #{boardNo}
		]]>
	</select>

	<select id="retrieveMaxBoardNo" resultType="string">
		<![CDATA[
		/*	retrieveMaxBoardNo	*/
			SELECT MAX(BOARD.BOARD_NO)
			FROM   TB_BOARD BOARD
		]]>
	</select>

	<insert id="createBoard" parameterType="board">
		<![CDATA[
		/*	createBoard	*/
			INSERT INTO TB_BOARD(
			  BOARD_NO
			, USER_CODE
			, BOARD_TITLE
			, BOARD_CONTENTS
			, BOARD_DATE
			) VALUES (
			  'B' || LPAD(BOARD_SEQ.NEXTVAL, 6, 0)
			, #{userCode}
			, #{boardTitle}
			, #{boardContents}
			, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')
			)
		]]>
	</insert>

	<update id="updateBoard" parameterType="board">
		<![CDATA[
		/*	updateBoard	*/
			UPDATE TB_BOARD
			SET BOARD_TITLE          =  #{boardTitle}
			  , BOARD_CONTENTS       =  #{boardContents}
			WHERE BOARD_NO = #{boardNo}
		]]>
	</update>

	<update id="updateBoardHits" parameterType="board">
		<![CDATA[
		/*	updateBoardHits	*/
			UPDATE TB_BOARD
			SET BOARD_HITS          =  BOARD_HITS + 1
			WHERE BOARD_NO = #{boardNo}
		]]>
	</update>

	<update id="updateBoardRating" parameterType="board">
		<![CDATA[
		/*	updateBoardRating	*/
			UPDATE TB_BOARD
			SET BOARD_RATING          =  BOARD_RATING + 1
			WHERE BOARD_NO = #{boardNo}
		]]>
	</update>

	<delete id="deleteBoard" parameterType="map">
		<![CDATA[
		/*	deleteBoard	*/
			DELETE
			FROM  TB_BOARD
			WHERE 1=1
			AND BOARD_NO = #{boardNo}
		]]>
	</delete>
</mapper>